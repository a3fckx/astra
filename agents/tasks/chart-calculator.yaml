name: Calculate Astrology Chart
description: Generate Vedic or Western astrology chart from user birth data
project: astra

input_schema:
  type: object
  required:
    - birth_date
    - birth_time
    - birth_location
  properties:
    birth_date:
      type: string
      description: Date of birth in YYYY-MM-DD format
    birth_time:
      type: string
      description: Birth time in HH:MM 24-hour format
    birth_location:
      type: string
      description: Birth location as "City, Country"
    birth_timezone:
      type: string
      description: IANA timezone (e.g., "Asia/Kolkata", "America/New_York")
    chart_system:
      type: string
      enum:
        - vedic
        - western
        - both
      default: vedic
      description: Astrology system to use
    ayanamsha:
      type: string
      enum:
        - lahiri
        - raman
        - krishnamurti
        - yukteshwar
      default: lahiri
      description: Ayanamsha to use for Vedic calculations

main:
  # Step 1: Validate birth data
  - evaluate:
      has_complete_data: $ all([_.birth_date, _.birth_time, _.birth_location])

  - if: $ not _.has_complete_data
    then:
      - return:
          success: false
          error: "Incomplete birth data"
          message: "Cannot calculate chart without complete birth data (date, time, location)"
    else:
      - continue: null

  # Step 2: Generate Vedic chart calculation
  - if: $ _.chart_system in ["vedic", "both"]
    then:
      - prompt: |-
          You are an expert Vedic astrologer. Calculate a detailed birth chart based on the following birth data.

          **Birth Details:**
          - Date: {birth_date}
          - Time: {birth_time}
          - Location: {birth_location}
          - Timezone: {birth_timezone or "Not specified"}
          - Ayanamsha: {ayanamsha}

          Provide a detailed Vedic astrology chart analysis. Return your response as valid JSON in this exact format:

          {{
            "system": "vedic",
            "sun_sign": "sign name",
            "moon_sign": "sign name",
            "ascendant": "sign name",
            "planets": [
              {{
                "name": "Sun",
                "sign": "sign name",
                "house": 1,
                "degree": "23째45'",
                "nakshatra": "nakshatra name"
              }}
            ],
            "house_lords": [
              {{"house": 1, "lord": "planet name"}}
            ],
            "yogas": ["Raj Yoga", "Dhana Yoga"],
            "dasha": {{
              "mahadasha": "planet name",
              "antardasha": "planet name"
            }},
            "strengths": ["Exalted Mars", "Strong 9th house"],
            "challenges": ["12th house Moon", "Debilitated Venus"],
            "chart_summary": "Brief human-readable interpretation (2-3 sentences)"
          }}

          birth_date = {_.birth_date}
          birth_time = {_.birth_time}
          birth_location = {_.birth_location}
          birth_timezone = {_.birth_timezone}
          ayanamsha = {_.ayanamsha}
        unwrap: true

      - evaluate:
          vedic_chart_json: $ json.loads(steps[-1].output)
    else:
      - evaluate:
          vedic_chart_json: null

  # Step 3: Generate Western chart calculation (if requested)
  - if: $ _.chart_system in ["western", "both"]
    then:
      - prompt: |-
          You are an expert Western astrologer. Calculate a detailed birth chart based on the following birth data.

          **Birth Details:**
          - Date: {birth_date}
          - Time: {birth_time}
          - Location: {birth_location}
          - Timezone: {birth_timezone or "Not specified"}

          Provide a detailed Western astrology chart analysis. Return your response as valid JSON in this exact format:

          {{
            "system": "western",
            "sun_sign": "sign name",
            "moon_sign": "sign name",
            "rising_sign": "sign name",
            "planets": [
              {{
                "name": "Sun",
                "sign": "sign name",
                "house": 5,
                "degree": "23째45'12\""
              }}
            ],
            "house_cusps": [
              {{"house": 1, "sign": "sign name", "degree": "15째30'"}}
            ],
            "aspects": [
              {{
                "planet1": "Sun",
                "planet2": "Moon",
                "aspect": "trine",
                "orb": "2째"
              }}
            ],
            "elements": {{
              "fire": 3,
              "earth": 2,
              "air": 3,
              "water": 2
            }},
            "modalities": {{
              "cardinal": 4,
              "fixed": 3,
              "mutable": 3
            }},
            "patterns": ["Grand Trine", "T-Square"],
            "chart_summary": "Brief human-readable interpretation (2-3 sentences)"
          }}

          birth_date = {_.birth_date}
          birth_time = {_.birth_time}
          birth_location = {_.birth_location}
          birth_timezone = {_.birth_timezone}
        unwrap: true

      - evaluate:
          western_chart_json: $ json.loads(steps[-1].output)
    else:
      - evaluate:
          western_chart_json: null

  # Step 4: Return chart data for MongoDB sync
  - return:
      success: true
      chart_system: $ _.chart_system
      birth_data:
        date: $ _.birth_date
        time: $ _.birth_time
        location: $ _.birth_location
        timezone: $ _.birth_timezone
      vedic_chart: $ _.vedic_chart_json if _.vedic_chart_json else null
      western_chart: $ _.western_chart_json if _.western_chart_json else null
      calculated_at: $ datetime.now().isoformat()
      message: "Chart calculated successfully"
